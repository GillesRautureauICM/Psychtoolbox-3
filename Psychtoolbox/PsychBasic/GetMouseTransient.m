function [x,y,buttons,focus,valuators,valinfo] = GetMouseTransient(windowPtrOrScreenNumber, mouseDev)
% [x,y,buttons,focus,valuators,valinfo] = GetMouseTransient([windowPtrOrScreenNumber][, mouseDev])
%
% Same as GetMouse function but buttons output is the number of clic for
% each buttons since last call
% 
% This functions is an attempt to capture very fast clic generated by
% touchscreen on Windows OS
%
% if a button is pressed at call time, the number of clics is added else
% the number of clics is subtracted
% ex:
% * button currently pressed and 2 clics occurred since last call >
% returned value is 3
% * button released  and 1 clics occurred since last call >
% returned value is -1
% * button released and no clics occurred since last call >
% returned value is 0
%
% If mouseDev > 0, get touchscreen State as a fourth value of buttons
% x and y will be touch positions if a touch is detected.
% Otherwise, x and y are mouse position
%
% If this function is called on other OS, it just return GetMouse results
% (for now)
% 
% See: GetMouseTransientDemo and GetMouseTransientTouchscreenDemo
%
% June 2017     gr	1st write
% October 2020  gr  add demo files
% mars 2024     gr  spelling

%%%
% GetMouseTransient
%
% Gilles Rautureau
% gilles DOT rautureau AT icm-institute DOT org


%default input values
if nargin < 1
    windowPtrOrScreenNumber = [];
end

if nargin < 2
    mouseDev = [];
end


%standard call of GetMouse
if (nargout >= 6) && ~IsWin
    % Get optional valinfo:
    [x,y,buttons,focus,valuators,valinfo] = GetMouse(windowPtrOrScreenNumber, mouseDev);
else
    valinfo = [];
    % Do not get optional valinfo:
    [x,y,buttons,focus,valuators] = GetMouse(windowPtrOrScreenNumber, mouseDev);
    
    
end

if IsWin
    buttons = double(buttons);
    [buttonsTransient] = Screen('GetMouseTransientHelper',3);
    for i = [1, 2, 3]
        if buttons(i) > 0
            buttons(i) = buttons(i) + buttonsTransient(i);
        else
            buttons(i) = - buttonsTransient(i);
        end
    end
    if mouseDev > 0
        [xTouch, yTouch, touchState, nbTouch] = Screen('GetTouchHelper');
        if touchState > 0
            buttons(4) = 1 + nbTouch;
           
        else
            buttons(4) = - nbTouch;
        end
        if buttons(4) % replace coordinates by touch position
            if ~isempty(windowPtrOrScreenNumber)
                if IsLinux && (Screen('WindowKind', windowPtrOrScreenNumber) == 1) && ~IsWayland %should never execute but, this part is conserved for a later support of other platforms
                    % Linux with an onscreen window handle. 'GetMouseHelper' already
                    % returns window local coordinates, ie. relative to window origin:
                    x=xTouch;
                    y=yTouch;
                else
                    % Non-Linux or screen number instead of window handle. Remap global -> local:
                    screenRect=Screen('GlobalRect',windowPtrOrScreenNumber);
                    x=xTouch-screenRect(RectLeft);
                    y=yTouch-screenRect(RectTop);
                end
            end
        end
    end
else
    warning('GetMouseTransient function is only supported on Windows OS\nPlease use GetMouse instead');
end
